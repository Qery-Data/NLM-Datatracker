name: SSB
on: 
  workflow_dispatch:
  schedule:
    - cron: "5 12 * * *"
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get working copy
        uses: actions/checkout@main
        with:
          fetch-depth: 1
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Requirements
        run: pip install -r requirements.txt
      - name: SetLocale
        run: |
          sudo locale-gen nb_NO
      - name: Update SSB jobber
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_jobber.py
      - name: Update SSB Ledige stillinger
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_ledige_stillinger.py
      - name: Update SSB sysselsatte
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_sysselsatte.py
      - name: Update SSB produktivitet
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_produktivitet.py
      - name: Update SSB organisasjonsgrad
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_organisasjonsgrad.py
      - name: Update SSB arbeidsledige
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_arbeidsledige.py
      - name: Update SSB LÃ¸nn
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_lonn.py
      - name: Update SSB Arbeidstid
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_arbeidstid.py
      - name: Update SSB Livslang Laering
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_livslang_laring.py
      - name: Update SSB Prognoser
        if: always()
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SSB_prognoser.py
      - name: Commit and push if it changed
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Latest data: ${timestamp}" || exit 0
          git push
